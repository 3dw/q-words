{"version":3,"sources":["webpack:///./src/components/src/components/win.vue","webpack:///./src/components/src/components/john_win.vue","webpack:///./src/pages/src/pages/Spin.vue"],"names":[],"mappings":";AAwBA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;UAAA;EACA;EACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;;;;AC9BA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;UAAA;EACA;EACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;;;;ACqEA;AACA;AAEA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;AACA;AAEA;EACA;AACA","file":"css/93b3da9c.2cccbfed.css","sourcesContent":["<template>\n  <div>\n    <div class = \"page\">\n      <div class=\"ui image card\">\n        <img src=\"../assets/th.jpg\" />\n        <h1 class=\"text-white shadow\">{{ $t('good!') }}</h1>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'win',\n  data () {\n    return {\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  img {\n    z-index: 99999;\n    width: 300px;\n    border-radius: 30px;\n  }\n\n  .page {\n    z-index: 99999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation-name: bigger;\n    animation-duration: 3s;\n    opacity: 0.96;\n    text-align: center;\n  }\n\n  .page img {\n  }\n\n  /* The animation code */\n  @keyframes bigger {\n      0%   {transform: scale(0.7)}\n      50%  {transform: scale(1.5)}\n      100% {transform: scale(0.7)}\n  }\n\n</style>\n","<template>\n  <div>\n    <div class = \"page\">\n      <div class=\"ui image card\">\n        <img src=\"../assets/john_1.jpg\" />\n        <h4 class=\"text-white shadow\">{{ $t('john wins!') }}</h4>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'win',\n  data () {\n    return {\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  img {\n    z-index: 99999;\n    width: 300px;\n    border-radius: 30px;\n  }\n\n  .page {\n    z-index: 99999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation-name: bigger;\n    animation-duration: 3s;\n    opacity: 0.96;\n    text-align: center;\n  }\n\n  .page img {\n  }\n\n  /* The animation code */\n  @keyframes bigger {\n      0%   {transform: scale(0.2)}\n      50%  {transform: scale(0.8)}\n      100% {transform: scale(0.2)}\n  }\n\n</style>\n","<template>\n  <q-page padding>\n    <q-toolbar>\n      <q-toolbar-title>\n        {{ $t('spin_note') }}\n      </q-toolbar-title>\n    </q-toolbar>\n    <q-toolbar v-if=\"human_vs_bot\">\n      <q-avatar>\n        <img src=\"../assets/john.png\">\n      </q-avatar>\n      <q-linear-progress stripe rounded style=\"height: 25px\" :value=\"progress\" class=\"q-mt-md\" :color=\"progress > 0.62 ? 'red' : 'blue'\"/>\n    </q-toolbar>\n    <div class=\"centered\">\n      <div class=\"spin\" v-bind:class=\"{good: isWin(), hide: winning || loosing}\" v-bind:style=\"{ transform: countTrans(deg) }\" @click=\"check()\" @touchstart=\"check()\">\n        <div class=\"image\">\n          <h4 class=\"attached top middle text-white shadow\">{{card_list[a].name}}</h4>\n          <img class=\"a\" :src=\"card_list[a].img\">\n        </div>\n      </div>\n    </div>\n    <q-select color=\"purple-12\" v-model=\"speed\" :options=\"options\" :label=\"$t('speed')\" />\n    <span>{{$t('3d_spin')}}:</span>\n    <q-toggle\n      v-model=\"hard\"\n      color=\"green\"\n    />\n    <win v-show=\"winning\"></win>\n    <john-win v-show=\"loosing\" ></john-win>\n  </q-page>\n</template>\n\n<script>\nimport win from '../components/win'\nimport johnWin from '../components/john_win'\n\nexport default {\n  name: 'Spin',\n  props: ['card_list', 'human_vs_bot', 'bot_level'],\n  components: {\n    win, johnWin\n  },\n  data () {\n    return {\n      progress: 0,\n      winning: false,\n      loosing: false,\n      record: false,\n      good: 0,\n      bad: 0,\n      a: 0,\n      deg: 0,\n      speed: 5,\n      hard: false,\n      options: [3, 5, 10, 20]\n    }\n  },\n  methods: {\n    countTrans: function (deg) {\n      if (!this.hard) {\n        return 'rotate(-' + deg + 'deg)'\n      } else {\n        return 'rotateY(-' + deg + 'deg) rotateZ(-' + deg + 'deg)'\n      }\n    },\n    isWin: function () {\n      return Math.abs((this.deg + 30) % 360) < 60\n    },\n    check: function () {\n      if (this.isWin()) {\n        this.win()\n      } else {\n        this.bad++\n      }\n    },\n    reset: function () {\n      console.log('reset')\n      this.a = Math.floor(Math.random() * this.card_list.length)\n      if (this.card_list[this.a].hide) {\n        this.reset()\n      }\n      this.deg = 0\n      this.winning = false\n      this.loosing = false\n      this.progress = 0\n      this.$emit('johnSay', 'Be relexed...')\n    },\n    win: function () {\n      this.winning = true\n      this.progress = 0\n      this.deg = 0\n      this.good++\n      this.$emit('johnSay', 'You win!')\n      setTimeout(this.reset, 3000)\n    },\n    loose: function () {\n      this.loosing = true\n      this.$emit('johnSay', 'I win!')\n      setTimeout(this.reset, 3000)\n    },\n    go: function () {\n      if (!this.winning && !this.loosing) {\n        if (Math.floor(this.deg / 360) < Math.floor((this.deg + Number(this.speed)) / 360)) {\n          this.bad++\n        }\n        this.deg += Number(this.speed)\n        this.progress += (this.bot_level / 1000)\n        if (this.progress >= 1 && this.isWin() && this.human_vs_bot) {\n          this.loose()\n        }\n      }\n    }\n  },\n  mounted () {\n    setTimeout(this.reset, 500)\n    setInterval(this.go, 50)\n    window.addEventListener('keydown', this.check)\n  }\n}\n</script>\n\n<style>\n\n.spin {\n}\n\n.spin.good img {\n  box-shadow: green 0px 0px 10px 10px;\n}\n\n.spin img {\n  width: 50vmin;\n  height: 50vmin;\n  border-radius: 100%;\n  transition: all 0.3s ease;\n}\n\n.centered {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.hide {\n  opacity: 0;\n}\n\n</style>\n"],"sourceRoot":""}
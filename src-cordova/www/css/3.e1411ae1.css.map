{"version":3,"sources":["webpack:///./src/components/src/components/win.vue","webpack:///./src/components/src/components/john_win.vue","webpack:///./src/pages/src/pages/Name.vue"],"names":[],"mappings":";AAuBA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;UAAA;EACA;EACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;;;;AC7BA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;UAAA;EACA;EACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;;;;AC+EA;EACA;EACA;EACA;EACA;EACA;AACA;AAEA;EACA;AACA","file":"css/3.e1411ae1.css","sourcesContent":["<template>\n  <div>\n    <div class = \"page\">\n      <div class=\"ui image card\">\n        <img src=\"../assets/th.jpg\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'win',\n  data () {\n    return {\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  img {\n    z-index: 99999;\n    width: 300px;\n    border-radius: 30px;\n  }\n\n  .page {\n    z-index: 99999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation-name: bigger;\n    animation-duration: 3s;\n    opacity: 0.96;\n    text-align: center;\n  }\n\n  .page img {\n  }\n\n  /* The animation code */\n  @keyframes bigger {\n      0%   {transform: scale(0.7)}\n      50%  {transform: scale(1.5)}\n      100% {transform: scale(0.7)}\n  }\n\n</style>\n","<template>\n  <div>\n    <div class = \"page\">\n      <div class=\"ui image card\">\n        <img src=\"../assets/john_1.jpg\" />\n        <h4 class=\"text-white shadow\">{{ $t('john wins!') }}</h4>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'win',\n  data () {\n    return {\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  img {\n    z-index: 99999;\n    width: 300px;\n    border-radius: 30px;\n  }\n\n  .page {\n    z-index: 99999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation-name: bigger;\n    animation-duration: 3s;\n    opacity: 0.96;\n    text-align: center;\n  }\n\n  .page img {\n  }\n\n  /* The animation code */\n  @keyframes bigger {\n      0%   {transform: scale(0.2)}\n      50%  {transform: scale(0.8)}\n      100% {transform: scale(0.2)}\n  }\n\n</style>\n","<template>\n  <q-page padding>\n    <q-toolbar>\n      <q-toolbar-title v-if=\"!hard\"> {{ $t('who_is_this?') }}\n      </q-toolbar-title>\n      <q-toolbar-title v-if=\"hard\"> {{ $t('who_is_missing?') }}\n      </q-toolbar-title>\n    </q-toolbar>\n    <q-toolbar v-if=\"human_vs_bot\">\n      <q-avatar>\n        <img src=\"../assets/john.png\">\n      </q-avatar>\n      <q-linear-progress stripe rounded style=\"height: 25px\" :value=\"progress\" class=\"q-mt-md\" :color=\"progress > 0.62 ? 'red' : 'blue'\"/>\n    </q-toolbar>\n    <div class=\"q-pa-md\" v-if=\"fishs1.length > 0\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <span class=\"big header\">{{ fishs1[a].name }}</span>\n        </div>\n        <div class=\"col\">\n          <q-list bordered separator>\n            <q-item v-for = \"(c, index) in fishs1\" :key = \"index\">\n              <q-item-section>\n                <a class=\"big\" @click = \"b = index; check()\" @touchstart=\"b = index; check()\">{{ c.name }}</a>\n              </q-item-section>\n            </q-item>\n          </q-list>\n        </div>\n      </div>\n    </div>\n    <q-select color=\"purple-12\" v-model=\"speed\" :options=\"options\" :label=\"$t('speed')\" />\n    <!-- <q-toggle\n      v-model=\"hard\"\n      color=\"green\"\n    /> -->\n    <win v-show=\"winning\" ></win>\n    <john-win v-show=\"loosing\" ></john-win>\n  </q-page>\n</template>\n\n<script>\n\nimport win from '../components/win'\nimport johnWin from '../components/john_win'\n\nexport default {\n  name: 'Name',\n  props: ['card_list', 'human_vs_bot', 'bot_level'],\n  components: {\n    win, johnWin\n  },\n  data () {\n    return {\n      fishs1: [],\n      winning: false,\n      loosing: false,\n      record: false,\n      progress: 0.1,\n      good: 0,\n      bad: 0,\n      a: 0,\n      t: 0.25,\n      b: -1,\n      hard: false,\n      speed: 0,\n      options: [0, 0.25, 0.5, 1]\n    }\n  },\n  methods: {\n    isWin: function () {\n      return this.card_list[this.a].name === this.card_list[this.b].name\n    },\n    check: function () {\n      if (this.isWin()) {\n        this.win()\n      } else {\n        this.bad++\n      }\n    },\n    reset: function () {\n      this.fishs1 = this.card_list.filter(function (o) { return o && !o.hide }).slice().sort(function () {\n        return Math.random() - 0.5\n      }).slice(0, 2)\n      this.winning = false\n      this.loosing = false\n      this.progress = 0\n      this.$emit('johnSay', 'Be relexed...')\n      this.a = Math.floor(Math.random() * this.fishs1.length)\n    },\n    win: function () {\n      this.winning = true\n      this.progress = 0\n      this.t = 0.25\n      this.good++\n      this.bad = 0\n      this.$emit('johnSay', 'You win!')\n      setTimeout(this.reset, 2000)\n    },\n    loose: function () {\n      this.loosing = true\n      this.$emit('johnSay', 'I win!')\n      setTimeout(this.reset, 2000)\n    },\n    go: function () {\n      if (!this.winning && !this.loosing) {\n        if (Math.floor(this.t) < Math.floor(this.t + Number(this.speed))) {\n          this.bad++\n        }\n        this.t += Number(this.speed)\n        this.progress += (this.speed / 4)\n        if (this.progress >= 1 && this.human_vs_bot) {\n          this.loose()\n        }\n      }\n    },\n    noDup: function (idx) {\n      for (var i = 0; i < idx; i++) {\n        if (this.fishs1[i].name === this.fishs1[idx].name) {\n          return false\n        }\n      }\n      return true\n    }\n  },\n  mounted () {\n    setTimeout(this.reset, 500)\n    setInterval(this.go, 1000)\n  }\n}\n</script>\n\n<style>\n\n.big.header {\n  display: block;\n  font-weight: bold;\n  font-size: 33vmin;\n  margin: auto auto;\n  text-align: center;\n}\n\na.big {\n  font-size: 20vmin;\n}\n\n</style>\n"],"sourceRoot":""}
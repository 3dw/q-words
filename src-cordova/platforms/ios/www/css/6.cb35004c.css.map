{"version":3,"sources":["webpack:///./src/components/src/components/win.vue","webpack:///./src/components/src/components/john_win.vue","webpack:///./src/pages/src/pages/Write.vue"],"names":[],"mappings":";AAuBA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;UAAA;EACA;EACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;;;;AC7BA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;UAAA;EACA;EACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;;;;ACgEA;EACA;EACA;EACA;EACA;EACA;AACA;AAEA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;AACA","file":"css/6.cb35004c.css","sourcesContent":["<template>\n  <div>\n    <div class = \"page\">\n      <div class=\"ui image card\">\n        <img src=\"../assets/th.jpg\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'win',\n  data () {\n    return {\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  img {\n    z-index: 99999;\n    width: 300px;\n    border-radius: 30px;\n  }\n\n  .page {\n    z-index: 99999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation-name: bigger;\n    animation-duration: 3s;\n    opacity: 0.96;\n    text-align: center;\n  }\n\n  .page img {\n  }\n\n  /* The animation code */\n  @keyframes bigger {\n      0%   {transform: scale(0.7)}\n      50%  {transform: scale(1.5)}\n      100% {transform: scale(0.7)}\n  }\n\n</style>\n","<template>\n  <div>\n    <div class = \"page\">\n      <div class=\"ui image card\">\n        <img src=\"../assets/john_1.jpg\" />\n        <h4 class=\"text-white shadow\">{{ $t('john wins!') }}</h4>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'win',\n  data () {\n    return {\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n  img {\n    z-index: 99999;\n    width: 300px;\n    border-radius: 30px;\n  }\n\n  .page {\n    z-index: 99999;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation-name: bigger;\n    animation-duration: 3s;\n    opacity: 0.96;\n    text-align: center;\n  }\n\n  .page img {\n  }\n\n  /* The animation code */\n  @keyframes bigger {\n      0%   {transform: scale(0.2)}\n      50%  {transform: scale(0.8)}\n      100% {transform: scale(0.2)}\n  }\n\n</style>\n","<template>\n  <q-page padding>\n    <q-toolbar>\n      <q-toolbar-title>\n        {{$t('write_note')}}\n      </q-toolbar-title>\n    </q-toolbar>\n    <q-toolbar v-if=\"human_vs_bot\">\n      <q-avatar>\n        <img src=\"../assets/john.png\">\n      </q-avatar>\n      <q-linear-progress stripe rounded style=\"height: 25px\" :value=\"progress\" class=\"q-mt-md\" :color=\"progress > 0.62 ? 'red' : 'blue'\"/>\n    </q-toolbar>\n    <div class=\"q-pa-md\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <q-card style=\"background: radial-gradient(circle, #35a2ff 0%, #014a88 100%)\" class=\"text-white my-card\">\n            <div class=\"content\" v-show=\"!hard\">\n              <span class=\"big header\">{{fishs1[Math.floor(a) % fishs1.length].name}}</span>\n            </div>\n          </q-card>\n        </div>\n        <div class=\"col\">\n          <q-card class=\"text-white my-card\">\n            <div class=\"content\">\n              <q-input type=\"text\" name=\"ans\" class=\"big header\" clearable outlined v-model=\"ans\" :autofocus=\"true\"></q-input>\n            </div>\n          </q-card>\n        </div>\n      </div>\n    </div>\n    <q-select color=\"purple-12\" v-model=\"speed\" :options=\"options\" :label=\"$t('speed')\" />\n    <win v-show=\"winning\" ></win>\n    <john-win v-show=\"loosing\" ></john-win>\n  </q-page>\n</template>\n\n<script>\n\nimport win from '../components/win'\nimport johnWin from '../components/john_win'\n\nexport default {\n  name: 'pair',\n  props: [ 'card_list', 'human_vs_bot', 'bot_level' ],\n  components: { win, johnWin },\n  data () {\n    return {\n      fishs1: [],\n      ans: '',\n      loosing: false,\n      progress: 0.1,\n      a: 0,\n      winning: true,\n      speed: 0.25,\n      hard: false,\n      record: false,\n      good: 0,\n      bad: 0,\n      options: [0.1, 0.25, 0.5, 1]\n    }\n  },\n  methods: {\n    go: function () {\n      if (!this.winning) {\n        // this.a += Number(this.speed)\n        this.progress += (this.bot_level / 200)\n        var ma = Math.floor(this.a) % this.fishs1.length\n        if (this.progress >= 1 && this.fishs1[ma].name === this.fishs1[this.b].name && this.human_vs_bot) {\n          this.loose()\n        }\n      }\n    },\n    check: function () {\n      // console.log('a')\n      var ma = Math.floor(this.a) % this.fishs1.length\n      if (this.fishs1[ma].name === this.ans) {\n        this.win()\n      } else {\n        this.bad++\n      }\n    },\n    reset: function () {\n      this.fishs1 = this.card_list.filter(function (o) { return o && !o.hide }).slice().sort(function () {\n        return Math.random() - 0.5\n      }).slice(0, 4)\n      this.b = Math.floor(Math.random() * this.fishs1.length)\n      this.winning = false\n      this.loosing = false\n      this.progress = 0\n      this.$emit('johnSay', 'Be relexed...')\n    },\n    win: function () {\n      this.winning++\n      this.good++\n      this.$emit('johnSay', 'You win!')\n      setTimeout(this.reset, 2000)\n    },\n    loose: function () {\n      this.loosing = true\n      this.$emit('johnSay', 'I win!')\n      setTimeout(this.reset, 2000)\n    }\n  },\n  mounted () {\n    setInterval(this.go, 500)\n    this.reset()\n  },\n  watch: {\n    ans: function (val) {\n      this.check()\n    }\n  }\n}\n</script>\n\n<style>\n\n.big.header {\n  display: block;\n  font-weight: bold;\n  font-size: 33vmin !important;\n  margin: auto auto;\n  text-align: center;\n}\n\nimg {\n  width: 100%;\n}\n\n.my-card {\n  width: 100%;\n  height: 45vmax;\n  max-width: 250px;\n  padding: 5px;\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":""}